React: Write a React Component from Scratch
Now that you've learned the basics of JSX and React components, it's time to write a component on your own. 
React components are the core building blocks of React applications so it's important to become very familiar with writing them. 
Remember, a typical React component is an ES6 class which extends React.Component.
It has a render method that returns HTML (from JSX) or null. This is the basic form of a React component.
Once you understand this well, you will be prepared to start building more complex React projects.


Define a class MyComponent that extends React.Component. Its render method should return a div that contains 
an h1 tag with the text: My First React Component! in it. Use this text exactly, the case and punctuation matter.
Make sure to call the constructor for your component, too.

Render this component to the DOM using ReactDOM.render(). There is a div with id='challenge-node' available for you to use.

// Code solution

// change code below this line

// First we create the class 
// Notice that it extends React.Component with a 
// Constructor that returns super
class MyComponet extends React.Component {
    constructor(props) {
        super(props);
    }
//Now we render, render is a function that returns 
// the div, ie the JSX code that will have the html
// Side note, render lives in our MyComponent Class
render() {
    // At the return we create our div element
    return (
        <div>
            <h1> My First React Component!</h1>
        </div>
    );
}

}; //we close the class called my component

//Now we render the class via this command/puppy
// Render takes two arguments, the class, then a node. 
//Since FCC gives us an id we use document.getElementById and pass the id to it
ReactDOM.render(<MyComponet />, document.getElementById('challenge-node'));
